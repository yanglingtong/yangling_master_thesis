2023-04-24 08:16:40.384809: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-04-24 08:16:40.498902: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-04-24 08:16:40.502608: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory
2023-04-24 08:16:40.502641: I tensorflow/compiler/xla/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.
2023-04-24 08:16:41.224154: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory
2023-04-24 08:16:41.224239: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory
2023-04-24 08:16:41.224255: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
Using custom data configuration default-6a4048e0959d3390
Found cached dataset csv (/home/ma/ma_ma/ma_ytong/.cache/huggingface/datasets/csv/default-6a4048e0959d3390/0.0.0/6b34fb8fcf56f7c8ba51dc895bfa2bfbe43546f190a60fcf74bb5e8afdcc2317)
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00, 661.67it/s]
Loading cached processed dataset at /home/ma/ma_ma/ma_ytong/.cache/huggingface/datasets/csv/default-6a4048e0959d3390/0.0.0/6b34fb8fcf56f7c8ba51dc895bfa2bfbe43546f190a60fcf74bb5e8afdcc2317/cache-625c8a49e46d5dd8.arrow
***** Running Prediction *****
  Num examples = 594
  Batch size = 8
  0%|          | 0/75 [00:00<?, ?it/s]  5%|▌         | 4/75 [00:00<00:01, 37.80it/s] 11%|█         | 8/75 [00:00<00:02, 33.47it/s] 16%|█▌        | 12/75 [00:00<00:01, 33.35it/s] 21%|██▏       | 16/75 [00:00<00:01, 32.24it/s] 27%|██▋       | 20/75 [00:00<00:01, 32.15it/s] 32%|███▏      | 24/75 [00:00<00:01, 31.85it/s] 37%|███▋      | 28/75 [00:00<00:01, 31.89it/s] 43%|████▎     | 32/75 [00:00<00:01, 31.59it/s] 48%|████▊     | 36/75 [00:01<00:01, 31.10it/s] 53%|█████▎    | 40/75 [00:01<00:01, 30.45it/s] 59%|█████▊    | 44/75 [00:01<00:01, 30.35it/s] 64%|██████▍   | 48/75 [00:01<00:00, 31.14it/s] 69%|██████▉   | 52/75 [00:01<00:00, 31.15it/s] 75%|███████▍  | 56/75 [00:01<00:00, 31.37it/s] 80%|████████  | 60/75 [00:01<00:00, 31.25it/s] 85%|████████▌ | 64/75 [00:02<00:00, 31.54it/s] 91%|█████████ | 68/75 [00:02<00:00, 30.80it/s] 96%|█████████▌| 72/75 [00:02<00:00, 31.35it/s]100%|██████████| 75/75 [00:02<00:00, 31.29it/s]
loading configuration file ../../../models/data_aug/framing/all_0.5_0.5/bm_2/config.json
Model config RobertaConfig {
  "_name_or_path": "roberta-base",
  "architectures": [
    "RobertaForSequenceClassification"
  ],
  "attention_probs_dropout_prob": 0.1,
  "bos_token_id": 0,
  "classifier_dropout": null,
  "eos_token_id": 2,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "id2label": {
    "0": "LABEL_0",
    "1": "LABEL_1",
    "2": "LABEL_2",
    "3": "LABEL_3",
    "4": "LABEL_4",
    "5": "LABEL_5",
    "6": "LABEL_6",
    "7": "LABEL_7",
    "8": "LABEL_8",
    "9": "LABEL_9",
    "10": "LABEL_10",
    "11": "LABEL_11",
    "12": "LABEL_12",
    "13": "LABEL_13",
    "14": "LABEL_14"
  },
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "label2id": {
    "LABEL_0": 0,
    "LABEL_1": 1,
    "LABEL_10": 10,
    "LABEL_11": 11,
    "LABEL_12": 12,
    "LABEL_13": 13,
    "LABEL_14": 14,
    "LABEL_2": 2,
    "LABEL_3": 3,
    "LABEL_4": 4,
    "LABEL_5": 5,
    "LABEL_6": 6,
    "LABEL_7": 7,
    "LABEL_8": 8,
    "LABEL_9": 9
  },
  "layer_norm_eps": 1e-05,
  "max_position_embeddings": 514,
  "model_type": "roberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 1,
  "position_embedding_type": "absolute",
  "problem_type": "single_label_classification",
  "torch_dtype": "float32",
  "transformers_version": "4.25.1",
  "type_vocab_size": 1,
  "use_cache": true,
  "vocab_size": 50265
}

loading weights file ../../../models/data_aug/framing/all_0.5_0.5/bm_2/pytorch_model.bin
All model checkpoint weights were used when initializing RobertaForSequenceClassification.

All the weights of RobertaForSequenceClassification were initialized from the model checkpoint at ../../../models/data_aug/framing/all_0.5_0.5/bm_2.
If your task is similar to the task the model of the checkpoint was trained on, you can already use RobertaForSequenceClassification for predictions without further training.
Loading cached processed dataset at /home/ma/ma_ma/ma_ytong/.cache/huggingface/datasets/csv/default-6a4048e0959d3390/0.0.0/6b34fb8fcf56f7c8ba51dc895bfa2bfbe43546f190a60fcf74bb5e8afdcc2317/cache-16f1a20df289d911.arrow
No `TrainingArguments` passed, using `output_dir=tmp_trainer`.
PyTorch: setting up devices
The default value for the training argument `--report_to` will change in v5 (from all installed integrations to none). In v5, you will need to use `--report_to all` to get the same behavior as now. You should start updating your code and make this info disappear :-).
***** Running Prediction *****
  Num examples = 594
  Batch size = 8
  0%|          | 0/75 [00:00<?, ?it/s]  7%|▋         | 5/75 [00:00<00:01, 41.58it/s] 13%|█▎        | 10/75 [00:00<00:01, 35.02it/s] 19%|█▊        | 14/75 [00:00<00:01, 32.76it/s] 24%|██▍       | 18/75 [00:00<00:01, 30.72it/s] 29%|██▉       | 22/75 [00:00<00:01, 31.43it/s] 35%|███▍      | 26/75 [00:00<00:01, 31.84it/s] 40%|████      | 30/75 [00:00<00:01, 32.15it/s] 45%|████▌     | 34/75 [00:01<00:01, 32.43it/s] 51%|█████     | 38/75 [00:01<00:01, 31.75it/s] 56%|█████▌    | 42/75 [00:01<00:01, 32.06it/s] 61%|██████▏   | 46/75 [00:01<00:00, 31.16it/s] 67%|██████▋   | 50/75 [00:01<00:00, 31.69it/s] 72%|███████▏  | 54/75 [00:01<00:00, 31.67it/s] 77%|███████▋  | 58/75 [00:01<00:00, 32.10it/s] 83%|████████▎ | 62/75 [00:01<00:00, 32.32it/s] 88%|████████▊ | 66/75 [00:02<00:00, 32.57it/s] 93%|█████████▎| 70/75 [00:02<00:00, 32.56it/s] 99%|█████████▊| 74/75 [00:02<00:00, 31.86it/s]100%|██████████| 75/75 [00:02<00:00, 32.46it/s]
loading configuration file ../../../models/data_aug/framing/all_0.5_0.5/bm_3/config.json
Model config RobertaConfig {
  "_name_or_path": "roberta-base",
  "architectures": [
    "RobertaForSequenceClassification"
  ],
  "attention_probs_dropout_prob": 0.1,
  "bos_token_id": 0,
  "classifier_dropout": null,
  "eos_token_id": 2,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "id2label": {
    "0": "LABEL_0",
    "1": "LABEL_1",
    "2": "LABEL_2",
    "3": "LABEL_3",
    "4": "LABEL_4",
    "5": "LABEL_5",
    "6": "LABEL_6",
    "7": "LABEL_7",
    "8": "LABEL_8",
    "9": "LABEL_9",
    "10": "LABEL_10",
    "11": "LABEL_11",
    "12": "LABEL_12",
    "13": "LABEL_13",
    "14": "LABEL_14"
  },
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "label2id": {
    "LABEL_0": 0,
    "LABEL_1": 1,
    "LABEL_10": 10,
    "LABEL_11": 11,
    "LABEL_12": 12,
    "LABEL_13": 13,
    "LABEL_14": 14,
    "LABEL_2": 2,
    "LABEL_3": 3,
    "LABEL_4": 4,
    "LABEL_5": 5,
    "LABEL_6": 6,
    "LABEL_7": 7,
    "LABEL_8": 8,
    "LABEL_9": 9
  },
  "layer_norm_eps": 1e-05,
  "max_position_embeddings": 514,
  "model_type": "roberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 1,
  "position_embedding_type": "absolute",
  "problem_type": "single_label_classification",
  "torch_dtype": "float32",
  "transformers_version": "4.25.1",
  "type_vocab_size": 1,
  "use_cache": true,
  "vocab_size": 50265
}

loading weights file ../../../models/data_aug/framing/all_0.5_0.5/bm_3/pytorch_model.bin
All model checkpoint weights were used when initializing RobertaForSequenceClassification.

All the weights of RobertaForSequenceClassification were initialized from the model checkpoint at ../../../models/data_aug/framing/all_0.5_0.5/bm_3.
If your task is similar to the task the model of the checkpoint was trained on, you can already use RobertaForSequenceClassification for predictions without further training.
Loading cached processed dataset at /home/ma/ma_ma/ma_ytong/.cache/huggingface/datasets/csv/default-6a4048e0959d3390/0.0.0/6b34fb8fcf56f7c8ba51dc895bfa2bfbe43546f190a60fcf74bb5e8afdcc2317/cache-c96175d13133a58e.arrow
No `TrainingArguments` passed, using `output_dir=tmp_trainer`.
PyTorch: setting up devices
The default value for the training argument `--report_to` will change in v5 (from all installed integrations to none). In v5, you will need to use `--report_to all` to get the same behavior as now. You should start updating your code and make this info disappear :-).
***** Running Prediction *****
  Num examples = 594
  Batch size = 8
  0%|          | 0/75 [00:00<?, ?it/s]  7%|▋         | 5/75 [00:00<00:01, 41.51it/s] 13%|█▎        | 10/75 [00:00<00:01, 33.94it/s] 19%|█▊        | 14/75 [00:00<00:01, 33.45it/s] 24%|██▍       | 18/75 [00:00<00:01, 33.10it/s] 29%|██▉       | 22/75 [00:00<00:01, 33.08it/s] 35%|███▍      | 26/75 [00:00<00:01, 32.98it/s] 40%|████      | 30/75 [00:00<00:01, 32.97it/s] 45%|████▌     | 34/75 [00:01<00:01, 32.75it/s] 51%|█████     | 38/75 [00:01<00:01, 32.78it/s] 56%|█████▌    | 42/75 [00:01<00:01, 32.76it/s] 61%|██████▏   | 46/75 [00:01<00:00, 31.62it/s] 67%|██████▋   | 50/75 [00:01<00:00, 32.03it/s] 72%|███████▏  | 54/75 [00:01<00:00, 32.13it/s] 77%|███████▋  | 58/75 [00:01<00:00, 32.34it/s] 83%|████████▎ | 62/75 [00:01<00:00, 32.45it/s] 88%|████████▊ | 66/75 [00:02<00:00, 32.65it/s] 93%|█████████▎| 70/75 [00:02<00:00, 32.50it/s] 99%|█████████▊| 74/75 [00:02<00:00, 32.66it/s]100%|██████████| 75/75 [00:02<00:00, 33.09it/s]
loading configuration file ../../../models/data_aug/framing/all_0.5_0.5/bm_4/config.json
Model config RobertaConfig {
  "_name_or_path": "roberta-base",
  "architectures": [
    "RobertaForSequenceClassification"
  ],
  "attention_probs_dropout_prob": 0.1,
  "bos_token_id": 0,
  "classifier_dropout": null,
  "eos_token_id": 2,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "id2label": {
    "0": "LABEL_0",
    "1": "LABEL_1",
    "2": "LABEL_2",
    "3": "LABEL_3",
    "4": "LABEL_4",
    "5": "LABEL_5",
    "6": "LABEL_6",
    "7": "LABEL_7",
    "8": "LABEL_8",
    "9": "LABEL_9",
    "10": "LABEL_10",
    "11": "LABEL_11",
    "12": "LABEL_12",
    "13": "LABEL_13",
    "14": "LABEL_14"
  },
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "label2id": {
    "LABEL_0": 0,
    "LABEL_1": 1,
    "LABEL_10": 10,
    "LABEL_11": 11,
    "LABEL_12": 12,
    "LABEL_13": 13,
    "LABEL_14": 14,
    "LABEL_2": 2,
    "LABEL_3": 3,
    "LABEL_4": 4,
    "LABEL_5": 5,
    "LABEL_6": 6,
    "LABEL_7": 7,
    "LABEL_8": 8,
    "LABEL_9": 9
  },
  "layer_norm_eps": 1e-05,
  "max_position_embeddings": 514,
  "model_type": "roberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 1,
  "position_embedding_type": "absolute",
  "problem_type": "single_label_classification",
  "torch_dtype": "float32",
  "transformers_version": "4.25.1",
  "type_vocab_size": 1,
  "use_cache": true,
  "vocab_size": 50265
}

loading weights file ../../../models/data_aug/framing/all_0.5_0.5/bm_4/pytorch_model.bin
All model checkpoint weights were used when initializing RobertaForSequenceClassification.

All the weights of RobertaForSequenceClassification were initialized from the model checkpoint at ../../../models/data_aug/framing/all_0.5_0.5/bm_4.
If your task is similar to the task the model of the checkpoint was trained on, you can already use RobertaForSequenceClassification for predictions without further training.
Loading cached processed dataset at /home/ma/ma_ma/ma_ytong/.cache/huggingface/datasets/csv/default-6a4048e0959d3390/0.0.0/6b34fb8fcf56f7c8ba51dc895bfa2bfbe43546f190a60fcf74bb5e8afdcc2317/cache-3734f8b77241d8b7.arrow
No `TrainingArguments` passed, using `output_dir=tmp_trainer`.
PyTorch: setting up devices
The default value for the training argument `--report_to` will change in v5 (from all installed integrations to none). In v5, you will need to use `--report_to all` to get the same behavior as now. You should start updating your code and make this info disappear :-).
***** Running Prediction *****
  Num examples = 593
  Batch size = 8
  0%|          | 0/75 [00:00<?, ?it/s]  7%|▋         | 5/75 [00:00<00:01, 41.54it/s] 13%|█▎        | 10/75 [00:00<00:01, 34.80it/s] 19%|█▊        | 14/75 [00:00<00:01, 33.27it/s] 24%|██▍       | 18/75 [00:00<00:01, 31.96it/s] 29%|██▉       | 22/75 [00:00<00:01, 32.26it/s] 35%|███▍      | 26/75 [00:00<00:01, 31.09it/s] 40%|████      | 30/75 [00:00<00:01, 31.76it/s] 45%|████▌     | 34/75 [00:01<00:01, 31.47it/s] 51%|█████     | 38/75 [00:01<00:01, 31.63it/s] 56%|█████▌    | 42/75 [00:01<00:01, 31.46it/s] 61%|██████▏   | 46/75 [00:01<00:00, 31.08it/s] 67%|██████▋   | 50/75 [00:01<00:00, 31.04it/s] 72%|███████▏  | 54/75 [00:01<00:00, 31.30it/s] 77%|███████▋  | 58/75 [00:01<00:00, 31.27it/s] 83%|████████▎ | 62/75 [00:01<00:00, 31.22it/s] 88%|████████▊ | 66/75 [00:02<00:00, 31.78it/s] 93%|█████████▎| 70/75 [00:02<00:00, 31.66it/s] 99%|█████████▊| 74/75 [00:02<00:00, 31.89it/s]100%|██████████| 75/75 [00:02<00:00, 32.18it/s]
loading configuration file ../../../models/data_aug/framing/all_0.5_0.5/bm_5/config.json
Model config RobertaConfig {
  "_name_or_path": "roberta-base",
  "architectures": [
    "RobertaForSequenceClassification"
  ],
  "attention_probs_dropout_prob": 0.1,
  "bos_token_id": 0,
  "classifier_dropout": null,
  "eos_token_id": 2,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "id2label": {
    "0": "LABEL_0",
    "1": "LABEL_1",
    "2": "LABEL_2",
    "3": "LABEL_3",
    "4": "LABEL_4",
    "5": "LABEL_5",
    "6": "LABEL_6",
    "7": "LABEL_7",
    "8": "LABEL_8",
    "9": "LABEL_9",
    "10": "LABEL_10",
    "11": "LABEL_11",
    "12": "LABEL_12",
    "13": "LABEL_13",
    "14": "LABEL_14"
  },
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "label2id": {
    "LABEL_0": 0,
    "LABEL_1": 1,
    "LABEL_10": 10,
    "LABEL_11": 11,
    "LABEL_12": 12,
    "LABEL_13": 13,
    "LABEL_14": 14,
    "LABEL_2": 2,
    "LABEL_3": 3,
    "LABEL_4": 4,
    "LABEL_5": 5,
    "LABEL_6": 6,
    "LABEL_7": 7,
    "LABEL_8": 8,
    "LABEL_9": 9
  },
  "layer_norm_eps": 1e-05,
  "max_position_embeddings": 514,
  "model_type": "roberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 1,
  "position_embedding_type": "absolute",
  "problem_type": "single_label_classification",
  "torch_dtype": "float32",
  "transformers_version": "4.25.1",
  "type_vocab_size": 1,
  "use_cache": true,
  "vocab_size": 50265
}

loading weights file ../../../models/data_aug/framing/all_0.5_0.5/bm_5/pytorch_model.bin
All model checkpoint weights were used when initializing RobertaForSequenceClassification.

All the weights of RobertaForSequenceClassification were initialized from the model checkpoint at ../../../models/data_aug/framing/all_0.5_0.5/bm_5.
If your task is similar to the task the model of the checkpoint was trained on, you can already use RobertaForSequenceClassification for predictions without further training.
Loading cached processed dataset at /home/ma/ma_ma/ma_ytong/.cache/huggingface/datasets/csv/default-6a4048e0959d3390/0.0.0/6b34fb8fcf56f7c8ba51dc895bfa2bfbe43546f190a60fcf74bb5e8afdcc2317/cache-18ad1da83475ff3d.arrow
No `TrainingArguments` passed, using `output_dir=tmp_trainer`.
PyTorch: setting up devices
The default value for the training argument `--report_to` will change in v5 (from all installed integrations to none). In v5, you will need to use `--report_to all` to get the same behavior as now. You should start updating your code and make this info disappear :-).
***** Running Prediction *****
  Num examples = 593
  Batch size = 8
  0%|          | 0/75 [00:00<?, ?it/s]  7%|▋         | 5/75 [00:00<00:01, 41.64it/s] 13%|█▎        | 10/75 [00:00<00:01, 35.94it/s] 19%|█▊        | 14/75 [00:00<00:01, 34.64it/s] 24%|██▍       | 18/75 [00:00<00:01, 31.76it/s] 29%|██▉       | 22/75 [00:00<00:01, 32.17it/s] 35%|███▍      | 26/75 [00:00<00:01, 32.40it/s] 40%|████      | 30/75 [00:00<00:01, 32.60it/s] 45%|████▌     | 34/75 [00:01<00:01, 32.64it/s] 51%|█████     | 38/75 [00:01<00:01, 31.60it/s] 56%|█████▌    | 42/75 [00:01<00:01, 31.89it/s] 61%|██████▏   | 46/75 [00:01<00:00, 32.16it/s] 67%|██████▋   | 50/75 [00:01<00:00, 29.83it/s] 72%|███████▏  | 54/75 [00:01<00:00, 29.36it/s] 77%|███████▋  | 58/75 [00:01<00:00, 29.83it/s] 83%|████████▎ | 62/75 [00:01<00:00, 30.44it/s] 88%|████████▊ | 66/75 [00:02<00:00, 31.20it/s] 93%|█████████▎| 70/75 [00:02<00:00, 31.19it/s] 99%|█████████▊| 74/75 [00:02<00:00, 30.52it/s]100%|██████████| 75/75 [00:02<00:00, 31.90it/s]
loading configuration file ../../../models/data_aug/framing/all_0.5_0.5/bm_6/config.json
Model config RobertaConfig {
  "_name_or_path": "roberta-base",
  "architectures": [
    "RobertaForSequenceClassification"
  ],
  "attention_probs_dropout_prob": 0.1,
  "bos_token_id": 0,
  "classifier_dropout": null,
  "eos_token_id": 2,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "id2label": {
    "0": "LABEL_0",
    "1": "LABEL_1",
    "2": "LABEL_2",
    "3": "LABEL_3",
    "4": "LABEL_4",
    "5": "LABEL_5",
    "6": "LABEL_6",
    "7": "LABEL_7",
    "8": "LABEL_8",
    "9": "LABEL_9",
    "10": "LABEL_10",
    "11": "LABEL_11",
    "12": "LABEL_12",
    "13": "LABEL_13",
    "14": "LABEL_14"
  },
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "label2id": {
    "LABEL_0": 0,
    "LABEL_1": 1,
    "LABEL_10": 10,
    "LABEL_11": 11,
    "LABEL_12": 12,
    "LABEL_13": 13,
    "LABEL_14": 14,
    "LABEL_2": 2,
    "LABEL_3": 3,
    "LABEL_4": 4,
    "LABEL_5": 5,
    "LABEL_6": 6,
    "LABEL_7": 7,
    "LABEL_8": 8,
    "LABEL_9": 9
  },
  "layer_norm_eps": 1e-05,
  "max_position_embeddings": 514,
  "model_type": "roberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 1,
  "position_embedding_type": "absolute",
  "problem_type": "single_label_classification",
  "torch_dtype": "float32",
  "transformers_version": "4.25.1",
  "type_vocab_size": 1,
  "use_cache": true,
  "vocab_size": 50265
}

loading weights file ../../../models/data_aug/framing/all_0.5_0.5/bm_6/pytorch_model.bin
All model checkpoint weights were used when initializing RobertaForSequenceClassification.

All the weights of RobertaForSequenceClassification were initialized from the model checkpoint at ../../../models/data_aug/framing/all_0.5_0.5/bm_6.
If your task is similar to the task the model of the checkpoint was trained on, you can already use RobertaForSequenceClassification for predictions without further training.
  0%|          | 0/1 [00:00<?, ?ba/s]100%|██████████| 1/1 [00:01<00:00,  1.72s/ba]100%|██████████| 1/1 [00:01<00:00,  1.72s/ba]
No `TrainingArguments` passed, using `output_dir=tmp_trainer`.
PyTorch: setting up devices
The default value for the training argument `--report_to` will change in v5 (from all installed integrations to none). In v5, you will need to use `--report_to all` to get the same behavior as now. You should start updating your code and make this info disappear :-).
***** Running Prediction *****
  Num examples = 593
  Batch size = 8
  0%|          | 0/75 [00:00<?, ?it/s]  7%|▋         | 5/75 [00:00<00:01, 41.54it/s] 13%|█▎        | 10/75 [00:00<00:01, 36.15it/s] 19%|█▊        | 14/75 [00:00<00:01, 34.78it/s] 24%|██▍       | 18/75 [00:00<00:01, 34.09it/s] 29%|██▉       | 22/75 [00:00<00:01, 33.68it/s] 35%|███▍      | 26/75 [00:00<00:01, 33.36it/s] 40%|████      | 30/75 [00:00<00:01, 33.19it/s] 45%|████▌     | 34/75 [00:01<00:01, 33.09it/s] 51%|█████     | 38/75 [00:01<00:01, 33.09it/s] 56%|█████▌    | 42/75 [00:01<00:00, 33.05it/s] 61%|██████▏   | 46/75 [00:01<00:00, 33.02it/s] 67%|██████▋   | 50/75 [00:01<00:00, 33.01it/s] 72%|███████▏  | 54/75 [00:01<00:00, 32.97it/s] 77%|███████▋  | 58/75 [00:01<00:00, 32.98it/s] 83%|████████▎ | 62/75 [00:01<00:00, 32.89it/s] 88%|████████▊ | 66/75 [00:01<00:00, 32.92it/s] 93%|█████████▎| 70/75 [00:02<00:00, 33.02it/s] 99%|█████████▊| 74/75 [00:02<00:00, 32.98it/s]100%|██████████| 75/75 [00:02<00:00, 33.75it/s]
loading configuration file ../../../models/data_aug/framing/all_0.5_0.5/bm_7/config.json
Model config RobertaConfig {
  "_name_or_path": "roberta-base",
  "architectures": [
    "RobertaForSequenceClassification"
  ],
  "attention_probs_dropout_prob": 0.1,
  "bos_token_id": 0,
  "classifier_dropout": null,
  "eos_token_id": 2,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "id2label": {
    "0": "LABEL_0",
    "1": "LABEL_1",
    "2": "LABEL_2",
    "3": "LABEL_3",
    "4": "LABEL_4",
    "5": "LABEL_5",
    "6": "LABEL_6",
    "7": "LABEL_7",
    "8": "LABEL_8",
    "9": "LABEL_9",
    "10": "LABEL_10",
    "11": "LABEL_11",
    "12": "LABEL_12",
    "13": "LABEL_13",
    "14": "LABEL_14"
  },
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "label2id": {
    "LABEL_0": 0,
    "LABEL_1": 1,
    "LABEL_10": 10,
    "LABEL_11": 11,
    "LABEL_12": 12,
    "LABEL_13": 13,
    "LABEL_14": 14,
    "LABEL_2": 2,
    "LABEL_3": 3,
    "LABEL_4": 4,
    "LABEL_5": 5,
    "LABEL_6": 6,
    "LABEL_7": 7,
    "LABEL_8": 8,
    "LABEL_9": 9
  },
  "layer_norm_eps": 1e-05,
  "max_position_embeddings": 514,
  "model_type": "roberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 1,
  "position_embedding_type": "absolute",
  "problem_type": "single_label_classification",
  "torch_dtype": "float32",
  "transformers_version": "4.25.1",
  "type_vocab_size": 1,
  "use_cache": true,
  "vocab_size": 50265
}

loading weights file ../../../models/data_aug/framing/all_0.5_0.5/bm_7/pytorch_model.bin
All model checkpoint weights were used when initializing RobertaForSequenceClassification.

All the weights of RobertaForSequenceClassification were initialized from the model checkpoint at ../../../models/data_aug/framing/all_0.5_0.5/bm_7.
If your task is similar to the task the model of the checkpoint was trained on, you can already use RobertaForSequenceClassification for predictions without further training.
Loading cached processed dataset at /home/ma/ma_ma/ma_ytong/.cache/huggingface/datasets/csv/default-6a4048e0959d3390/0.0.0/6b34fb8fcf56f7c8ba51dc895bfa2bfbe43546f190a60fcf74bb5e8afdcc2317/cache-1da4be4bbdb5200f.arrow
No `TrainingArguments` passed, using `output_dir=tmp_trainer`.
PyTorch: setting up devices
The default value for the training argument `--report_to` will change in v5 (from all installed integrations to none). In v5, you will need to use `--report_to all` to get the same behavior as now. You should start updating your code and make this info disappear :-).
***** Running Prediction *****
  Num examples = 593
  Batch size = 8
  0%|          | 0/75 [00:00<?, ?it/s]  7%|▋         | 5/75 [00:00<00:01, 41.30it/s] 13%|█▎        | 10/75 [00:00<00:01, 35.58it/s] 19%|█▊        | 14/75 [00:00<00:01, 34.33it/s] 24%|██▍       | 18/75 [00:00<00:01, 33.55it/s] 29%|██▉       | 22/75 [00:00<00:01, 33.32it/s] 35%|███▍      | 26/75 [00:00<00:01, 33.05it/s] 40%|████      | 30/75 [00:00<00:01, 32.96it/s] 45%|████▌     | 34/75 [00:01<00:01, 32.35it/s] 51%|█████     | 38/75 [00:01<00:01, 31.64it/s] 56%|█████▌    | 42/75 [00:01<00:01, 31.97it/s] 61%|██████▏   | 46/75 [00:01<00:00, 32.14it/s] 67%|██████▋   | 50/75 [00:01<00:00, 32.26it/s] 72%|███████▏  | 54/75 [00:01<00:00, 32.27it/s] 77%|███████▋  | 58/75 [00:01<00:00, 32.35it/s] 83%|████████▎ | 62/75 [00:01<00:00, 31.50it/s] 88%|████████▊ | 66/75 [00:02<00:00, 31.95it/s] 93%|█████████▎| 70/75 [00:02<00:00, 32.17it/s] 99%|█████████▊| 74/75 [00:02<00:00, 32.35it/s]100%|██████████| 75/75 [00:02<00:00, 33.01it/s]
loading configuration file ../../../models/data_aug/framing/all_0.5_0.5/bm_8/config.json
Model config RobertaConfig {
  "_name_or_path": "roberta-base",
  "architectures": [
    "RobertaForSequenceClassification"
  ],
  "attention_probs_dropout_prob": 0.1,
  "bos_token_id": 0,
  "classifier_dropout": null,
  "eos_token_id": 2,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "id2label": {
    "0": "LABEL_0",
    "1": "LABEL_1",
    "2": "LABEL_2",
    "3": "LABEL_3",
    "4": "LABEL_4",
    "5": "LABEL_5",
    "6": "LABEL_6",
    "7": "LABEL_7",
    "8": "LABEL_8",
    "9": "LABEL_9",
    "10": "LABEL_10",
    "11": "LABEL_11",
    "12": "LABEL_12",
    "13": "LABEL_13",
    "14": "LABEL_14"
  },
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "label2id": {
    "LABEL_0": 0,
    "LABEL_1": 1,
    "LABEL_10": 10,
    "LABEL_11": 11,
    "LABEL_12": 12,
    "LABEL_13": 13,
    "LABEL_14": 14,
    "LABEL_2": 2,
    "LABEL_3": 3,
    "LABEL_4": 4,
    "LABEL_5": 5,
    "LABEL_6": 6,
    "LABEL_7": 7,
    "LABEL_8": 8,
    "LABEL_9": 9
  },
  "layer_norm_eps": 1e-05,
  "max_position_embeddings": 514,
  "model_type": "roberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 1,
  "position_embedding_type": "absolute",
  "problem_type": "single_label_classification",
  "torch_dtype": "float32",
  "transformers_version": "4.25.1",
  "type_vocab_size": 1,
  "use_cache": true,
  "vocab_size": 50265
}

loading weights file ../../../models/data_aug/framing/all_0.5_0.5/bm_8/pytorch_model.bin
All model checkpoint weights were used when initializing RobertaForSequenceClassification.

All the weights of RobertaForSequenceClassification were initialized from the model checkpoint at ../../../models/data_aug/framing/all_0.5_0.5/bm_8.
If your task is similar to the task the model of the checkpoint was trained on, you can already use RobertaForSequenceClassification for predictions without further training.
Loading cached processed dataset at /home/ma/ma_ma/ma_ytong/.cache/huggingface/datasets/csv/default-6a4048e0959d3390/0.0.0/6b34fb8fcf56f7c8ba51dc895bfa2bfbe43546f190a60fcf74bb5e8afdcc2317/cache-f47dc15f59bf9bf0.arrow
No `TrainingArguments` passed, using `output_dir=tmp_trainer`.
PyTorch: setting up devices
The default value for the training argument `--report_to` will change in v5 (from all installed integrations to none). In v5, you will need to use `--report_to all` to get the same behavior as now. You should start updating your code and make this info disappear :-).
***** Running Prediction *****
  Num examples = 593
  Batch size = 8
  0%|          | 0/75 [00:00<?, ?it/s]  7%|▋         | 5/75 [00:00<00:01, 41.29it/s] 13%|█▎        | 10/75 [00:00<00:01, 34.89it/s] 19%|█▊        | 14/75 [00:00<00:01, 33.21it/s] 24%|██▍       | 18/75 [00:00<00:01, 32.79it/s] 29%|██▉       | 22/75 [00:00<00:01, 32.17it/s] 35%|███▍      | 26/75 [00:00<00:01, 32.11it/s] 40%|████      | 30/75 [00:00<00:01, 32.36it/s] 45%|████▌     | 34/75 [00:01<00:01, 32.03it/s] 51%|█████     | 38/75 [00:01<00:01, 31.41it/s] 56%|█████▌    | 42/75 [00:01<00:01, 31.13it/s] 61%|██████▏   | 46/75 [00:01<00:00, 31.31it/s] 67%|██████▋   | 50/75 [00:01<00:00, 31.30it/s] 72%|███████▏  | 54/75 [00:01<00:00, 31.55it/s] 77%|███████▋  | 58/75 [00:01<00:00, 31.37it/s] 83%|████████▎ | 62/75 [00:01<00:00, 31.56it/s] 88%|████████▊ | 66/75 [00:02<00:00, 31.98it/s] 93%|█████████▎| 70/75 [00:02<00:00, 31.78it/s] 99%|█████████▊| 74/75 [00:02<00:00, 32.02it/s]100%|██████████| 75/75 [00:02<00:00, 32.44it/s]
loading configuration file ../../../models/data_aug/framing/all_0.5_0.5/bm_9/config.json
Model config RobertaConfig {
  "_name_or_path": "roberta-base",
  "architectures": [
    "RobertaForSequenceClassification"
  ],
  "attention_probs_dropout_prob": 0.1,
  "bos_token_id": 0,
  "classifier_dropout": null,
  "eos_token_id": 2,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "id2label": {
    "0": "LABEL_0",
    "1": "LABEL_1",
    "2": "LABEL_2",
    "3": "LABEL_3",
    "4": "LABEL_4",
    "5": "LABEL_5",
    "6": "LABEL_6",
    "7": "LABEL_7",
    "8": "LABEL_8",
    "9": "LABEL_9",
    "10": "LABEL_10",
    "11": "LABEL_11",
    "12": "LABEL_12",
    "13": "LABEL_13",
    "14": "LABEL_14"
  },
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "label2id": {
    "LABEL_0": 0,
    "LABEL_1": 1,
    "LABEL_10": 10,
    "LABEL_11": 11,
    "LABEL_12": 12,
    "LABEL_13": 13,
    "LABEL_14": 14,
    "LABEL_2": 2,
    "LABEL_3": 3,
    "LABEL_4": 4,
    "LABEL_5": 5,
    "LABEL_6": 6,
    "LABEL_7": 7,
    "LABEL_8": 8,
    "LABEL_9": 9
  },
  "layer_norm_eps": 1e-05,
  "max_position_embeddings": 514,
  "model_type": "roberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 1,
  "position_embedding_type": "absolute",
  "problem_type": "single_label_classification",
  "torch_dtype": "float32",
  "transformers_version": "4.25.1",
  "type_vocab_size": 1,
  "use_cache": true,
  "vocab_size": 50265
}

loading weights file ../../../models/data_aug/framing/all_0.5_0.5/bm_9/pytorch_model.bin
All model checkpoint weights were used when initializing RobertaForSequenceClassification.

All the weights of RobertaForSequenceClassification were initialized from the model checkpoint at ../../../models/data_aug/framing/all_0.5_0.5/bm_9.
If your task is similar to the task the model of the checkpoint was trained on, you can already use RobertaForSequenceClassification for predictions without further training.
Loading cached processed dataset at /home/ma/ma_ma/ma_ytong/.cache/huggingface/datasets/csv/default-6a4048e0959d3390/0.0.0/6b34fb8fcf56f7c8ba51dc895bfa2bfbe43546f190a60fcf74bb5e8afdcc2317/cache-8e8620dae530c390.arrow
No `TrainingArguments` passed, using `output_dir=tmp_trainer`.
PyTorch: setting up devices
The default value for the training argument `--report_to` will change in v5 (from all installed integrations to none). In v5, you will need to use `--report_to all` to get the same behavior as now. You should start updating your code and make this info disappear :-).
***** Running Prediction *****
  Num examples = 593
  Batch size = 8
  0%|          | 0/75 [00:00<?, ?it/s]  7%|▋         | 5/75 [00:00<00:01, 41.26it/s] 13%|█▎        | 10/75 [00:00<00:01, 35.69it/s] 19%|█▊        | 14/75 [00:00<00:01, 34.47it/s] 24%|██▍       | 18/75 [00:00<00:01, 33.82it/s] 29%|██▉       | 22/75 [00:00<00:01, 33.38it/s] 35%|███▍      | 26/75 [00:00<00:01, 32.06it/s] 40%|████      | 30/75 [00:00<00:01, 32.36it/s] 45%|████▌     | 34/75 [00:01<00:01, 31.94it/s] 51%|█████     | 38/75 [00:01<00:01, 31.87it/s] 56%|█████▌    | 42/75 [00:01<00:01, 31.53it/s] 61%|██████▏   | 46/75 [00:01<00:00, 31.92it/s] 67%|██████▋   | 50/75 [00:01<00:00, 32.11it/s] 72%|███████▏  | 54/75 [00:01<00:00, 32.26it/s] 77%|███████▋  | 58/75 [00:01<00:00, 32.27it/s] 83%|████████▎ | 62/75 [00:01<00:00, 32.40it/s] 88%|████████▊ | 66/75 [00:02<00:00, 32.54it/s] 93%|█████████▎| 70/75 [00:02<00:00, 32.52it/s] 99%|█████████▊| 74/75 [00:02<00:00, 32.58it/s]100%|██████████| 75/75 [00:02<00:00, 33.04it/s]
loading configuration file ../../../models/data_aug/framing/all_0.5_0.5/bm_10/config.json
Model config RobertaConfig {
  "_name_or_path": "roberta-base",
  "architectures": [
    "RobertaForSequenceClassification"
  ],
  "attention_probs_dropout_prob": 0.1,
  "bos_token_id": 0,
  "classifier_dropout": null,
  "eos_token_id": 2,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.1,
  "hidden_size": 768,
  "id2label": {
    "0": "LABEL_0",
    "1": "LABEL_1",
    "2": "LABEL_2",
    "3": "LABEL_3",
    "4": "LABEL_4",
    "5": "LABEL_5",
    "6": "LABEL_6",
    "7": "LABEL_7",
    "8": "LABEL_8",
    "9": "LABEL_9",
    "10": "LABEL_10",
    "11": "LABEL_11",
    "12": "LABEL_12",
    "13": "LABEL_13",
    "14": "LABEL_14"
  },
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "label2id": {
    "LABEL_0": 0,
    "LABEL_1": 1,
    "LABEL_10": 10,
    "LABEL_11": 11,
    "LABEL_12": 12,
    "LABEL_13": 13,
    "LABEL_14": 14,
    "LABEL_2": 2,
    "LABEL_3": 3,
    "LABEL_4": 4,
    "LABEL_5": 5,
    "LABEL_6": 6,
    "LABEL_7": 7,
    "LABEL_8": 8,
    "LABEL_9": 9
  },
  "layer_norm_eps": 1e-05,
  "max_position_embeddings": 514,
  "model_type": "roberta",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "pad_token_id": 1,
  "position_embedding_type": "absolute",
  "problem_type": "single_label_classification",
  "torch_dtype": "float32",
  "transformers_version": "4.25.1",
  "type_vocab_size": 1,
  "use_cache": true,
  "vocab_size": 50265
}

loading weights file ../../../models/data_aug/framing/all_0.5_0.5/bm_10/pytorch_model.bin
All model checkpoint weights were used when initializing RobertaForSequenceClassification.

All the weights of RobertaForSequenceClassification were initialized from the model checkpoint at ../../../models/data_aug/framing/all_0.5_0.5/bm_10.
If your task is similar to the task the model of the checkpoint was trained on, you can already use RobertaForSequenceClassification for predictions without further training.
Loading cached processed dataset at /home/ma/ma_ma/ma_ytong/.cache/huggingface/datasets/csv/default-6a4048e0959d3390/0.0.0/6b34fb8fcf56f7c8ba51dc895bfa2bfbe43546f190a60fcf74bb5e8afdcc2317/cache-b3412f7b37c808ce.arrow
No `TrainingArguments` passed, using `output_dir=tmp_trainer`.
PyTorch: setting up devices
The default value for the training argument `--report_to` will change in v5 (from all installed integrations to none). In v5, you will need to use `--report_to all` to get the same behavior as now. You should start updating your code and make this info disappear :-).
***** Running Prediction *****
  Num examples = 593
  Batch size = 8
  0%|          | 0/75 [00:00<?, ?it/s]  7%|▋         | 5/75 [00:00<00:01, 41.23it/s] 13%|█▎        | 10/75 [00:00<00:01, 35.89it/s] 19%|█▊        | 14/75 [00:00<00:01, 33.09it/s] 24%|██▍       | 18/75 [00:00<00:01, 30.46it/s] 29%|██▉       | 22/75 [00:00<00:01, 30.61it/s] 35%|███▍      | 26/75 [00:00<00:01, 30.46it/s] 40%|████      | 30/75 [00:00<00:01, 31.19it/s] 45%|████▌     | 34/75 [00:01<00:01, 31.21it/s] 51%|█████     | 38/75 [00:01<00:01, 30.84it/s] 56%|█████▌    | 42/75 [00:01<00:01, 30.91it/s] 61%|██████▏   | 46/75 [00:01<00:00, 30.93it/s] 67%|██████▋   | 50/75 [00:01<00:00, 31.49it/s] 72%|███████▏  | 54/75 [00:01<00:00, 31.75it/s] 77%|███████▋  | 58/75 [00:01<00:00, 32.01it/s] 83%|████████▎ | 62/75 [00:01<00:00, 32.19it/s] 88%|████████▊ | 66/75 [00:02<00:00, 32.36it/s] 93%|█████████▎| 70/75 [00:02<00:00, 32.50it/s] 99%|█████████▊| 74/75 [00:02<00:00, 32.53it/s]100%|██████████| 75/75 [00:02<00:00, 32.26it/s]
/pfs/data5/home/ma/ma_ma/ma_ytong/someNewEnvName/lib64/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/pfs/data5/home/ma/ma_ma/ma_ytong/someNewEnvName/lib64/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/pfs/data5/home/ma/ma_ma/ma_ytong/someNewEnvName/lib64/python3.8/site-packages/sklearn/metrics/_classification.py:1327: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
The result is below all_0.5_0.5
              precision    recall  f1-score   support

           0      0.000     0.000     0.000        10
           1      0.665     0.681     0.673       414
           2      0.523     0.386     0.444       210
           3      0.648     0.461     0.538        76
           4      0.333     0.226     0.269       155
           5      0.684     0.655     0.669       957
           6      0.388     0.442     0.413       473
           7      0.720     0.775     0.746       803
           8      0.647     0.615     0.631       286
           9      0.655     0.556     0.602       239
          10      0.467     0.534     0.498       410
          11      0.755     0.692     0.722       556
          12      0.628     0.638     0.633       243
          13      0.755     0.817     0.785       969
          14      0.736     0.697     0.716       132

    accuracy                          0.648      5933
   macro avg      0.574     0.545     0.556      5933
weighted avg      0.647     0.648     0.645      5933


============================= JOB FEEDBACK =============================

NodeName=uc2n901
Job ID: 22105659
Cluster: uc2
User/Group: ma_ytong/ma_ma
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 16
CPU Utilized: 00:00:41
CPU Efficiency: 2.95% of 00:23:12 core-walltime
Job Wall-clock time: 00:01:27
Memory Utilized: 3.26 GB
Memory Efficiency: 8.35% of 39.06 GB
